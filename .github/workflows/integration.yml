name: Integration Tests

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
    branches:
      - master
  pull_request:
  schedule:
    - cron: "0 1 * * *"

env:
  redis_stack_version: 6.2.2-v5

jobs:
  build_and_test_ubuntu:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: .NET Core 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
      - name: .NET Core 7
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0.x'
      - name: run redis-stack-server docker
        run: docker run -p 6379:6379 -d redis/redis-stack-server:edge
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore /p:ContinuousIntegrationBuild=true
      - name: Test
        run: dotnet test -f net6.0 --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - name: Test
        run: dotnet test -f net7.0 --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          verbose: true
      - name: Build
        run: dotnet pack -c Release

  build_and_test_windows:
    name: Build and Test on Widnows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Vampire/setup-wsl@v2
      - shell: wsl-bash {0}
        run: |
          sudo apt-get update
          sudo apt-get install curl -y && sudo apt-get install gpg -y && apt-get install lsb-release -y
          curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
          sudo apt-get update
          sudo apt-get install redis-stack-server -y
          /opt/redis-stack/bin/redis-stack-server >redisout.log 2>&1 &
          cat redisout.log
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore /p:ContinuousIntegrationBuild=true
      - name: Test
        run: dotnet test -f net481 --no-build --verbosity normal